"""
Django settings for tuc project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys
from pymongo import MongoClient

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'pjn@(eh(c3h)sp$ivp9l_9j^_lj8*!@507i*b8pb+xkapgs9c='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (sys.argv[1] == 'runserver')

if DEBUG is False:
    PROJECT_NAME = 'Djaley'
else:
    PROJECT_NAME = '127.0.0.1:8000'

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Google Signin
    'django.contrib.sites',
    'social_login',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    # UserOtherDetail
    'extra_user_detail.apps.ExtraUserDetailConfig',
    'article.apps.ArticleConfig',

    # For Device Detection
    'django_user_agents',
]

# Cache backend is optional, but recommended to speed up user agent parsing
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}


# Name of cache backend to cache user agents. If it not specified default
# cache alias will be used. Set to `None` to disable caching.
USER_AGENTS_CACHE = 'default'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Customs
    # To check mobile app users
    'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = 'tuc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR), 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # Custom Context Processors
                'website.context_processors.basic_data',
            ],
        },
    },
]

WSGI_APPLICATION = 'tuc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        "CLIENT": {
            "name": "tuc",
            "host": "mongodb+srv://ajinzrathod:ajinz812@theunitedcodes.eump1.mongodb.net/tuc?retryWrites=true&w=majority",
            "username": "ajinzrathod",
            "password": "ajinz812",
            "authMechanism": "SCRAM-SHA-1",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# Google Signin

# we need to specify the allauth backend
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)


# Continue to add site_id and specify redirect URL upon successful
# Google login:
SITE_ID = 2
LOGIN_REDIRECT_URL = '/user/profile/picture/'


# Finally, enable email scope to receive userâ€™s email addresses after
# successful social login:
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

CLIENT = MongoClient("mongodb+srv://ajinzrathod:ajinz812@theunitedcodes.eump1.mongodb.net/tuc?retryWrites=true&w=majority")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DATABASE_NAME = 'tuc'

DJANGO_ADMIN_SSO_OAUTH_CLIENT_ID = '226075552951-hhfiilf9ogq6dkug05j7tkej5bl0kd4g.apps.googleusercontent.com'
DJANGO_ADMIN_SSO_OAUTH_CLIENT_SECRET = 'PRegkN6skeTe5k1LowOWVQ6_'


# Template tags and filters - a | title
# TIME_ZONE = 'Asia/Kolkata'
